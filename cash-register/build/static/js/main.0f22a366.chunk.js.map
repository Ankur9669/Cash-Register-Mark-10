{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","isNextClicked","setNextClicked","isSubmitClicked","setSubmitClicked","className","for","type","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAqEeA,MAnEf,WAEE,MAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA4CF,oBAAS,GAArD,mBAAOG,EAAP,KAAwBC,EAAxB,KAEA,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAY,YAAjB,UACE,uDACA,iIAKA,sBAAKA,UAAY,wBAAjB,UACE,uBAAOC,IAAM,cAAb,yBACA,uBAAOC,KAAO,WACd,wBAAQC,QAAW,kBAAMN,GAAe,IAAxC,qBAGgB,GAAjBD,GACD,sBAAKI,UAAY,4BAAjB,UACE,uBAAOC,IAAM,kBAAb,wBACA,uBAAOC,KAAO,WACd,wBAAQC,QAAW,kBAAMJ,GAAiB,IAA1C,uBAIkB,GAAnBD,GACD,qBAAKE,UAAY,iCAAjB,SACE,wBAAOA,UAAY,cAAnB,UACE,oDACA,kCACA,+BACE,6CACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,sCAEF,+BACE,sCACA,sCACA,qCACA,qCACA,qCACA,oCACA,oCACA,oCACA,mCACA,oDC7CCI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0f22a366.chunk.js","sourcesContent":["import './App.css';\nimport {useState} from \"react\";\nfunction App() \n{\n  const [isNextClicked, setNextClicked] = useState(false);\n  const [isSubmitClicked, setSubmitClicked] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <div className = \"container\">\n        <h1>Cash Register Manager</h1>\n        <p>Enter the bill amount and cash given by the customer \n          and know minimum number of notes to return.\n        </p>\n\n        \n        <div className = \"bill-amount-container\">\n          <label for = \"bill-amount\">Bill Amount</label>\n          <input type = \"number\"></input>\n          <button onClick = {() => setNextClicked(true)}>Next</button>\n        </div>\n\n        {isNextClicked == true && \n        <div className = \"amount-received-container\">\n          <label for = \"amount-received\">Cash Given</label>\n          <input type = \"number\"></input>\n          <button onClick = {() => setSubmitClicked(true)}>Submit</button>\n        </div>\n        }\n        \n        {isSubmitClicked == true && \n        <div className = \"notes-to-be-returned-container\">\n          <table className = \"notes-table\">\n            <caption>Return Change</caption>\n            <tbody>\n            <tr>\n              <th>No of notes</th>\n              <td>0</td>\n              <td>0</td>\n              <td>0</td>\n              <td>0</td>\n              <td>0</td>\n              <td>0</td>\n              <td>0</td>\n              <td>0</td>\n              <td>0</td>\n            </tr>\n            <tr>\n              <th>Note</th>\n              <td>2000</td>\n              <td>500</td>\n              <td>200</td>\n              <td>100</td>\n              <td>50</td>\n              <td>20</td>\n              <td>10</td>\n              <td>5</td>\n              <td>1</td>\n            </tr>\n            </tbody>\n            \n          </table>\n        </div>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}